
<div class='container' >
	<!--中间部分start-->
	<div style="height: 840px;width: 100%;">
		<!--left-->
		<div style="width: 65%;height: 840px;float: left">
			<!--广告位-->
			<div class = "banner" style = "height: 280px; background-color: red">
			    <ul>
                	<% @index_banners.each do |b| %>
                	<li style="background-image: url('<%= b.image %>');">
                		<div class="inner">
                			<!--<h1><%= b.content %></h1>-->
                			<!--<p>暂无介绍</p>-->
                			<a class="btn" target="_blank" href="<%= b.url %>">查看详情</a>
                		</div>
                	</li>
                	</li>
                	<% end %>
                </ul>
			</div>
				<script>
                    if (window.chrome) {
                        $('.banner li').css('background-size', '100% 100%');
                    }
                    $('.banner').unslider({
                        arrows: true,
                        fluid: true,
                        dots: true
                    });
                </script>
			
			<!--广告位 end-->
			
			<!--美食单-->
			<!--<div style="height: 280px;background-color: #06e4ed">
				<p>美食单</p>

			</div>-->
			<!--美食单 end-->
			
			<!--美食记-->
			<div style="height: 560px;background-color: #93ed03">
				<p>美食记</p>
				<% @index_statuses.each do |s| %>
				<p style="">内容：<%= s.content %> 来自：<%= s.user.name %></p>
				<% end %>
			</div>
			<!--美食记 end-->

		</div>
		<!--left end-->
		
		<!--right-->
		<div class="div_info" style="height: 840px;width:35%;background-color: #f1f1f1 ; float: right" >
		
		
			<h3 id="fuck">小卡片<%= link_to "more >", cards_path, class: 'btn btn-xs btn-info' %></h3>
			    <% @index_cards.each do |c| %>
			  
			        <p style="">小卡片内容：<%= c.content %> 来自：<%= c.user.name %></p>
			    <% end %>
		</div>
		<!--right end-->
		
	</div>
		<!--弹幕-->
    <div class="danmu-wrap flex-column navbar-fixed-top">
        <div class="box">
    </div>
    <div class="send flex-row">
        <input type="text" class="con" placeholder="弹幕发送[]~(^v^)~*">
        <div class="send-btn">发送</div>
    </div>

</div>

</div>


<script type="text/javascript">


function getRandomNum(Min,Max){
    var Range = Max - Min;   
    var Rand = Math.random();   
    const r = (Min + Math.round(Rand * Range));
    console.log("getRandomNum->" + r)
    return r;   
}  

</script>


<script>
    //1.获取元素
    var oBox = document.querySelector('.box');   //获取.box元素
    var oCon = document.querySelector('.con');   //获取input框
    var oBtn = document.querySelector('.send-btn');   //获取发送按钮
    var cW = oBox.offsetWidth;   //获取box的宽度
    // var cH = oBox.offsetHeight;   //获取box的高度
    // 这里获取到的高度是0
    // console.log("cW->" + cW + " cH->" + cH);
    var message = '';   //弹幕内容初始化
    oBtn.onclick = send;   //点击发送
    oCon.onkeydown = function (e) {
        e = e || window.event;
        if (e.keyCode === 13) {
            //回车键
            send();
        }
    };
    function send() {
        //获取oCon的内容
        if (oCon.value.length <= 0 || (/^\s+$/).test(oCon.value)) {
            alert('请输入弹幕');
            return false;
        }
        message = oCon.value;
        console.log(message);
        //生成标签
        createEle(message);   //执行节点创建模块
        oCon.value = '';   //收尾工作清空输入框
    }
    function createEle(txt) {
        //动态生成span标签
        var oMessage = document.createElement('span');   //创建标签
        oMessage.innerHTML = txt;   //接收参数txt并且生成替换内容
        oMessage.style.left = cW + 'px';  //初始化生成位置x
        oBox.appendChild(oMessage);   //把标签塞到oBox里面
        const boxHeight = oBox.offsetHeight;
        roll.call(oMessage, {
            //call改变函数内部this的指向
            // timing: ['linear', 'ease-out'][~~(Math.random() * 2)],
            timing: 'linear',
            color: '#' + (~~(Math.random() * (1 << 24))).toString(16),
            top: random(0, boxHeight),
            speed: random(190,1000),
            fontSize: random(16, 32)
        });
    }
    function roll(opt) {
        //弹幕滚动
        //如果对象中不存在timing 初始化
        opt.timing = opt.timing || 'linear';
        opt.color = opt.color || '#fff';
        console.log("top->" + opt.top);
        opt.top = opt.top || 0;
        console.log("top->" + opt.top);
        opt.fontSize = opt.fontSize || 16;
        this._left = parseInt(this.offsetLeft);   //获取当前left的值
        this.style.color = opt.color;   //初始化颜色
        this.style.top = opt.top + 'px';
        console.log("top->" + this.style.top);
        console.log("top->" + opt.top);
        this.style.fontSize = opt.fontSize + 'px';
        console.log("span.width->" + this.clientWidth)
        this.timer = setInterval(function () {
            if (this._left <= -this.clientWidth ) {
                clearInterval(this.timer);   //终止定时器
                this.parentNode.removeChild(this);
                return;   //终止函数
            }
            switch (opt.timing) {
                case 'linear':   //如果匀速
                    this._left += -opt.speed / 100.0;
                    break;
                case 'ease-out':   //
                    this._left += (0 - this._left) * .01;
                    break;
            }
            this.style.left = this._left + 'px';
        }.bind(this), 1000 / 60);
    }
    function random(start, end) {
        //随机数封装
        const r = start + ~~(Math.random() * (end - start));
        // console.log("random->" + start +"-" + end + "  ->" + r)
        return r;
    }
    var aLi = document.querySelectorAll('li');   //10

    function forEach(ele, cb) {
        for (var i = 0, len = aLi.length; i < len; i++) {
            cb && cb(ele[i], i);
        }
    }
    forEach(aLi, function (ele, i) {
        ele.style.left = i * 100 + 'px';
    });
    //产生闭包
    var obj = {
        num: 1,
        add: function () {
            this.num++;   //obj.num = 2;
            (function () {
                console.log(this.num);
            })
        }
    };
    obj.add();  //window
    
    function play_danmu(){
    var url = "/welcome/ajaxloadcards"
    // http://www.jb51.net/article/19366.htm
    // 日你妈妈
    $.getJSON(url,{},function(data){ 
        // var cardsArr = []
        // alert('获取完成')
        $.each(data,function(idx,item){ 
            // alert("name:"+item.content+",value:"+item.id); 
            createEle(item.content)
        }); 
    }); 
}
</script>

<style type="text/css" media="screen">
        .danmu-flex-column {
            display: flex;
            flex-direction: column;
            justify-content: space-between;, align-items: center;
        }

        .danmu-flex-row {
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
        }

        .danmu-wrap {
            overflow: hidden;
            width: 100%;
            height: 600px;
            margin: 60px auto;
            padding: 20px;
            background-color: rgba(0,0,0,0.5);
            box-shadow: 0 0 9px #222;
            border-radius: 20px;
            /*z-index:10; position:fixed; top:0; left:0; width:100% ;height:100%"*/
        }

        .danmu-wrap .box {
            position: relative;
            width: 100%;
            height: 90%;
            border-radius: 10px
        }

        .danmu-wrap .box span {
            position: absolute;
            top: 10px;
            left: 20px;
            display: block;
            padding: 10px;
            color: #336688;
            text-overflow: ellipsis;  
            white-space: nowrap;  
        }

        .danmu-wrap .send {
            display: flex;
            width: 100%;
            height: 10%;
            /*background-color: #000000;*/
            /*border-radius: 8px*/
        }

        .danmu-wrap .send input {
            width: 40%;
            height: 60%;
            border: 0;
            outline: 0;
            border-radius: 5px 0px 0px 5px;
            box-shadow: 0px 0px 5px #d9d9d9;
            text-indent: 1em
        }

        .danmu-wrap .send .send-btn {
            width: 100px;
            height: 60%;
            background-color: #fe943b;
            color: #FFF;
            text-align: center;
            border-radius: 0px 5px 5px 0px;
            line-height: 30px;
            cursor: pointer;
        }

        .danmu-wrap .send .send-btn:hover {
            background-color: #4cacdc
        }
    </style>